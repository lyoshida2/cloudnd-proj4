name: Frontend CI

on:
  pull_request:
    branches: 
      - main
  workflow_dispatch:
    

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    # Ref: https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      with:
        path: starter/frontend/node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('starter/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install dependencies
      run: npm install
    
    - name: Run linter
      run: npm run lint

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/frontend
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      with:
        path: starter/frontend/node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('starter/frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-

    - name: Install dependencies
      run: npm install
    
    - name: Run tests
      run: npm run test
  
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: starter/frontend
    
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t frontend .