name: Backend CI/CD

on:
  push:
    branches: 
      - main
  workflow_dispatch:
    

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Pipenv
      run: pip install pipenv

    - name: Install dependencies
      run:  pipenv install --dev

    - name: Run linter
      run: pipenv run lint

  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    
    steps:
    - uses: actions/checkout@v3

    - name: Install Pipenv
      run: pip install pipenv

    - name: Install dependencies
      run: pipenv install --dev

    - name: Run linter
      run: pipenv run test
  
  build_and_deploy:
    needs: [lint, test]
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: starter/backend
    
    steps:
    - uses: actions/checkout@v3

    # Reference: https://github.com/aws-actions/amazon-ecr-login
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
  
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR Public
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ vars.REGISTRY_REPO }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
        docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG